{"version":3,"sources":["components/layout/Header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/pages/About.js","App.js","index.js"],"names":["headerStyle","background","padding","color","linkStyle","Header","react_default","a","createElement","style","Link","to","TodoItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","margin","textDecoration","props","todo","completed","inherits","createClass","key","value","_this$props$todo","id","title","class","className","type","onChange","markComplete","bind","btnStyle","onClick","delItem","Component","float","Todos","todos","map","components_TodoItem","AddTodo","state","e","setState","defineProperty","target","name","onSubmit","preventDefault","addTodo","display","flex","placeholder","React","About","Fragment","App","toConsumableArray","filter","newTodo","uuid","v4","_this2","BrowserRouter","layout_Header","Route","exact","path","render","components_AddTodo","components_Todos","component","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a66160b6.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Header()\r\n{\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1>Todo List</h1>\r\n            <Link style={linkStyle} to=\"/todolistApp/\">Home</Link> |  {' '}\r\n            <Link style={linkStyle} to=\"/about\">About</Link>\r\n        </header>    \r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    background:'#659dbd',\r\n    padding:'2%',\r\n    color:'#eee',\r\n    \r\n}\r\n\r\nconst linkStyle ={\r\n    color:\"#eee\",\r\n\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class TodoItem extends Component {\r\n  //styling using function\r\n  getStyle = () =>{\r\n    return {\r\n      margin:'1%',\r\n      //put line through when checkbox is checked\r\n      textDecoration: this.props.todo.completed ? 'line-through':'none'\r\n    }\r\n  }\r\n\r\n  // .bind(this) is used coz after passing markComplete to onChange, props lose 'this'. So it'll show error\r\n  // markComplete(event){\r\n  //   console.log(this.props)\r\n  // }\r\n\r\n  //new \r\n\r\n  render() {\r\n    //todo item's props are: key, each todo objects, markComplete func\r\n    //here we pull out id and title from the todo objects.\r\n    //key word for this code is: destructuring\r\n    const { id, title } = this.props.todo;\r\n    return (\r\n      <div class='card' style={this.getStyle()}>\r\n        <ul className=\"list-group list-group-flush\">\r\n        <li className='list-group-item' >\r\n          {/* id arg is passed to markComplete func in app.js */}\r\n          <input \r\n              type ='checkbox' \r\n              onChange={this.props.markComplete.bind(this, id)} \r\n          /> \r\n            {'  '}\r\n          { title }\r\n          <input type='button' \r\n            style={btnStyle} \r\n            className=\"btn btn-danger\" \r\n            onClick={this.props.delItem.bind(this,id)}\r\n            value=\"X\"\r\n          />\r\n        </li>\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\n// PropTypes\r\nTodoItem.propTypes=\r\n{\r\n    todo: PropTypes.object.isRequired\r\n}\r\n\r\nconst itemStyle = {\r\n    backgroundColor:'#f4f4f4'\r\n}\r\n\r\nconst btnStyle = {\r\n  float: 'right',\r\n}\r\n\r\nexport default TodoItem\r\n\r\n","import React, { Component } from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Todos extends Component {\r\n  render() {\r\n    //   is the arg inside map a function?? => \r\n    // Yes it is...but a bit weird right??\r\n    return this.props.todos.map( todo =>\r\n      <TodoItem key={todo.id} todo={todo} markComplete={this.props.markComplete}\r\n      delItem={this.props.delItem}/>\r\n    ) \r\n  }\r\n}\r\n\r\n// PropType used to run typechecking on props of the components...\r\n// one of its benefit is: check which type of prop the component requires\r\n// todos: is a prop of Todos component\r\nTodos.propTypes = {\r\n  todos: PropTypes.array.isRequired\r\n}\r\nexport default Todos;\r\n","import React from 'react'\r\nclass  AddTodo extends React.Component {\r\n  //to check title changes every time onchange is fired in chrome, opening devtool and react tab...\r\n  state={\r\n      title:''\r\n  }\r\n  \r\n  //state of this AddTodo will change everytime I type\r\n  onChange = (e) =>{\r\n    //e.target = the object (html element) that sends this event here....\r\n    this.setState({[e.target.name]:e.target.value});\r\n  }\r\n\r\n  onSubmit = (e) =>{\r\n      e.preventDefault();\r\n      //pass this.state.title to addTodo func which is a props of AddTodo\r\n      this.props.addTodo(this.state.title);\r\n      //set State back to empty;\r\n      this.setState({title:''});\r\n  }\r\n\r\n  render()\r\n  {\r\n      return(\r\n        <form onSubmit={this.onSubmit} style={{margin:'1%',display:'flex'}}>\r\n            <input \r\n                type=\"text\"\r\n                name=\"title\"\r\n                //text that we input won't show on screen coz after submit, \"title\" in state becomes empty.\r\n                value={this.state.title}\r\n                style={{flex:'10', padding:'5px'}}\r\n                placeholder=\"  Add new Todo...\"\r\n                onChange={this.onChange} \r\n                className='form-control'\r\n            />\r\n            <input\r\n                type=\"submit\"\r\n                value=\"Submit\"\r\n                style={{flex:'1'}}\r\n                className='btn btn-success'\r\n            />\r\n        </form>\r\n      )\r\n      \r\n    }\r\n}\r\nexport default AddTodo;","import React from 'react'\r\n\r\nfunction About() {\r\n  return (\r\n    <React.Fragment >\r\n        <div className=\"container\">\r\n          <h3>About</h3>\r\n          <p>This is app created using react by Moonlight Kim.</p>\r\n        </div>   \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/layout/Header';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport uuid from 'uuid';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport About from './components/pages/About';\nimport axios from 'axios';\n\nclass App extends Component {\n  // why need this state??\n  state = \n  {\n    todos:[]\n  }\n  // use this to fetch data from the website below\n  // componentDidMount(){\n  //   axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n  //   .then(resp => this.setState({ todos: resp.data }))\n  // }\n\n  markComplete = (id) => \n  {\n    // setState used to update the state\n    // syntax==  setState({ key:array_as_value })\n    this.setState({ todo: this.state.todos.map(todo => {\n      if(todo.id === id)\n      {\n        //assign the opposite value of complete to the complete,\n        todo.completed = !todo.completed \n      }\n    }) })\n  }\n  \n  //delete each todo item\n  //filter() vs map() ???\n  delItem = (id) =>\n  {\n    //first it filters out the array and returns a new array. Then ... will split its element out and put in todos array \n    this.setState({ todos:[...this.state.todos.filter(todo => todo.id !== id )] })\n  }\n\n  //add todo\n  addTodo = (title) =>\n  {\n    if (title){\n      //axios.post(url, data)\n      // axios.post('https://jsonplaceholder.typicode.com/todos',{\n      //   title,\n      //   completed:false\n      // })\n      //   .then(resp => console.log(resp.data))\n      const newTodo = {\n        id: uuid.v4(),\n        title: title,\n        completed:false,\n      }\n      this.setState({todos:[newTodo, ...this.state.todos]})\n    }\n  }\n\n  render() \n  {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <Route exact path=\"/todolistApp\" render={ props =>\n            (\n              <React.Fragment>\n                <AddTodo addTodo = {this.addTodo}/>\n                {/* this Todos class now has todos and markComplete property  */}\n                <Todos todos={this.state.todos} markComplete={this.markComplete}\n                delItem = {this.delItem}/>\n              </React.Fragment>\n            )\n          } />\n          <Route path=\"/about\" component={About}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// the entry point of react app\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n// import Todos from './components/Todos'\n// This is for progressive web app\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}